<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CDDSS_API</name>
    </assembly>
    <members>
        <member name="M:CDDSS_API.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:CDDSS_API.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:CDDSS_API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:CDDSS_API.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:CDDSS_API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:CDDSS_API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,CDDSS_API.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,CDDSS_API.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:CDDSS_API.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},CDDSS_API.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:CDDSS_API.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:CDDSS_API.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:CDDSS_API.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.#ctor(CDDSS_API.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:CDDSS_API.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,CDDSS_API.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:CDDSS_API.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:CDDSS_API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CDDSS_API.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:CDDSS_API.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:CDDSS_API.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CDDSS_API.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:CDDSS_API.Controllers.AccountController">
            <summary>
            Microsoft Account Controller
            </summary>
        </member>
        <member name="T:CDDSS_API.Controllers.AlternativeController">
            <summary>
            Controller for Alternative
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.AlternativeController.Get(System.Int32)">
            <summary>
            returns all alternatives of an issue
            </summary>
            <param name="issueId"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.AlternativeController.Create(CDDSS_API.Models.AlternativeModel)">
            <summary>
            creates a new alternative
            </summary>
            <param name="altModel">Alternative Model</param>
            <returns>HTTP OK if successfully created, else HTTP not acceptable</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.AlternativeController.Update(CDDSS_API.Models.AlternativeModel)">
            <summary>
            updates an alternative
            </summary>
            <param name="altModel">Alternative Model</param>
            <returns>HTTP OK if successfully updated, else HTTP not acceptable</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.AlternativeController.Delete(System.Int32)">
            <summary>
            deletes an alternative
            </summary>
            <param name="alternativeId">integer id of the alternative</param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Controllers.ArtefactsController">
            <summary>
            controller for artefacts
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.ArtefactsController.GET">
            <summary>
            returns all artefacts
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.CriterionController.Get(System.Int32)">
            <summary>
            Returns a Criterion by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.CriterionController.GetAllCriterias">
            <summary>
            Returns all Criterias of CDDSS
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.CriterionController.Post(CDDSS_API.Models.CriterionModel)">
            <summary>
            Adds new Criterion
            </summary>
            <param name="criterion"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.CriterionController.Update(CDDSS_API.Models.CriterionModel)">
            <summary>
            Updates a specific Criterion
            </summary>
            <param name="ID"></param>
            <param name="name"></param>
            <param name="IssueID"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.CriterionController.Delete(System.Int32)">
            <summary>
            Deletes a specific Criterion from Issue
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.CriterionController.SetCriterionWeight(System.Int32,System.Int32)">
            <summary>
            Sets Criterion Weight
            </summary>
            <param name="id"></param>
            <param name="weight"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Controllers.CriterionWeightController">
            <summary>
            controller for criterion weights
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.CriterionWeightController.AddCriterionWeights(System.Collections.Generic.List{CDDSS_API.Models.CriterionWeightModel})">
            <summary>
            Adds criterion weights to a group of criteria of the logged in user
            </summary>
            <param name="list">group of criterion weights, user and accessobject must not be set</param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.CriterionWeightController.GetCriterionWeightsForIssue(System.Int32)">
            <summary>
            Returns all criterion weights of an issue
            </summary>
            <param name="issueId"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.CriterionWeightController.EditCriterionWeights(System.Collections.Generic.List{CDDSS_API.Models.CriterionWeightModel})">
            <summary>
            updates criterion wieghts of the current logged user
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.CriterionWeightController.DeleteCriterionWeights(System.Int32)">
            <summary>
            deletes criterion weights for issue of logged in user
            </summary>
            <param name="issueId"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Controllers.DecisionController">
            <summary>
            controller for decisions
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.DecisionController.GetDecision(System.Int32)">
            <summary>
            retrieves a decision by issueID
            </summary>
            <param name="issueID"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.DecisionController.CreateDecision(CDDSS_API.Models.DecisionModel)">
            <summary>
            creates a decision
            </summary>
            <param name="decision"></param>
            <returns>statuscode OK if successfull</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.DecisionController.EditDecision(CDDSS_API.Models.DecisionModel)">
            <summary>
            edits an decision
            </summary>
            <param name="decision"></param>
            <returns>statuscode OK if successfull</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.DecisionController.CreateDecision(System.Int32)">
            <summary>
            deletes an decision by issueId
            </summary>
            <param name="issueID"></param>
            <returns>statuscode OK if successfull</returns>
        </member>
        <member name="T:CDDSS_API.Controllers.DocumentController">
            <summary>
            controller used for document operations
            functionallity of deleting a document is not implemented yet
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.DocumentController.Get(System.Int32)">
            <summary>
            returns a list of Files attached to issue
            </summary>
            <returns>list of files</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.DocumentController.Post(System.Int32)">
            <summary>
            used to upload documents, documents should be attachet to request
            </summary>
            <param name="issueId"></param>
            <returns>returns statuscode created if everything is ok or list of files which cloud not be uploaded because the already exsist</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.DocumentController.Get(System.Int32,System.String)">
            <summary>
            Returns document by issueid and filename.
            If document does not exist then bad reqeust.
            </summary>
            <param name="issueId"></param>
            <param name="filename"></param>
            <returns>document</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.DocumentController.Delete(System.Int32,System.String)">
            <summary>
            deletes a document 
            </summary>
            <param name="issueId"></param>
            <param name="filename"></param>
            <returns>statuscode OK if deleted, statuscode NotAcceptable if document does not exist</returns>
        </member>
        <member name="T:CDDSS_API.Controllers.IssueController">
            <summary>
            controlle for an issue
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.IssueController.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.IssueController.GET(System.Int32)">
            <summary>
            returns an issue detailed by issueid
            </summary>
            <param name="issueId">id of issue</param>
            <returns>issueModel</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.IssueController.Create(CDDSS_API.Models.IssueModel)">
            <summary>
            Creates a new Issue
            Adding Artefacts, Tags, Stakeholders: If you add a tags (artefacts, stakeholders) wihtout an id, then they will be created as new. If You add those things with an id, make sure that you get this id throuth the right API (e.g. api/Tags)
            </summary>
            <param name="issue"></param>
            <returns>id of created issue</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.IssueController.GET">
            <summary>
            returns a list of issues which the current user is allowed to see(only id, title, tags and rieview fields are populated)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.IssueController.GETIssuesByUser">
            <summary>
            returns a list of issues with title
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.IssueController.GETAllIssuesByUser">
            <summary>
            returns a list of issues with title
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.IssueController.Delete(System.Int32)">
            <summary>
            deletes an issue
            </summary>
            <param name="issueId"></param>
            <returns>returns statuscode ok if issue is deleted, if issue does not exist or user is not owner then status code Not Acceptable</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.IssueController.NextStage(System.Int32)">
            <summary>
            the proccess gets to the next stage
            </summary>
            <param name="issueId"></param>
            <returns>OK if accomplished, else NotAcceptable</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.IssueController.Edit(CDDSS_API.Models.IssueModel)">
            <summary>
            Edits an issue with AccessRights, Tags, Stakeholders, InfluenceFactors and Artefacts
            </summary>
            <param name="issue"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Controllers.RatingController">
            <summary>
            controller for rating
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.RatingController.getRating(System.Int32,System.Int32)">
            <summary>
            Returns a specific Rating
            </summary>
            <param name="criterionId"></param>
            <param name="alternativeId"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.RatingController.getAllRatings">
            <summary>
            Returns all Ratings
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.RatingController.Post(CDDSS_API.Models.RatingModel)">
            <summary>
            Inserts new Rating
            </summary>
            <param name="rating"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.RatingController.Post(System.Collections.Generic.List{CDDSS_API.Models.RatingModel})">
            <summary>
            Inserts new Ratings for an issue of the current user
            </summary>
            <param name="rating"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.RatingController.getAllRatings(System.Int32)">
            <summary>
            Returns all Ratings
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.RatingController.Put(CDDSS_API.Models.RatingModel)">
            <summary>
            Updates rating for an issue of the current user
            </summary>
            <param name="alternativeId"></param>
            <param name="criterionId"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CDDSS_API.Controllers.RatingController.Put(System.Collections.Generic.List{CDDSS_API.Models.RatingModel})" -->
        <member name="M:CDDSS_API.Controllers.RatingController.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes a Rating
            </summary>
            <param name="alternativeId"></param>
            <param name="criterionId"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.RatingController.GetUserCriterionRating(System.Int32,System.String)">
            <summary>
            returns user rating for an criterion
            </summary>
            <param name="criterionID"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Controllers.ReviewController">
            <summary>
            controller for reviews
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.ReviewController.AddReview(CDDSS_API.Models.ReviewModel)">
            <summary>
            adds a new review to the issue of the logged user
            ReviewModel: Fields Issue and Rating are required Explanation is optional, other fields are not processed
            </summary>
            <param name="newReview"></param>
            <returns>OK if added</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.ReviewController.GetReviewsFOfIssue(System.Int32)">
            <summary>
            returns all reviews of an issue
            </summary>
            <param name="issueId">issue id</param>
            <returns>List of reviews</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.ReviewController.EditReview(CDDSS_API.Models.ReviewModel)">
            <summary>
            edits a review of the issue
            ReviewModel: Fields Issue and Rating are required Explanation is optional, other fields are not processed
            </summary>
            <param name="reviewModel"></param>
            <returns>OK if edited</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.ReviewController.DeleteReview(System.Int32)">
            <summary>
            Deletes an review for an issue of logged user
            </summary>
            <param name="issueId">issue id</param>
            <returns>OK if deleted</returns>
        </member>
        <member name="T:CDDSS_API.Controllers.StakeholdersController">
            <summary>
            controler for stakeholders
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.StakeholdersController.Get">
            <summary>
            returns all stakeholders
            </summary>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Controllers.TagsController">
            <summary>
            controller for tags
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.TagsController.GET">
            <summary>
            returns al tags
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.TagsController.GetTagByIssue(System.Int32)">
            <summary>
            returns all Tags of an Issue
            </summary>
            <param name="Issueid"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.TagsController.Put(CDDSS_API.Models.TagModel)">
            <summary>
            Edits a specific Tag
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.TagsController.DeleteTag(System.Int32)">
            <summary>
            Delets a specific Tag
            </summary>
            <param name="tagID"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Controllers.UserController">
            <summary>
            ApiController User
            used retrieving list of users and editing user
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.UserController.#ctor">
            <summary>
            default constructer
            </summary>
        </member>
        <member name="M:CDDSS_API.Controllers.UserController.Get">
            <summary>
            returns a list with all users (only first name and last name)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.UserController.GET">
            <summary>
            returns current logged in user
            </summary>
            <returns>UserShort</returns>
        </member>
        <member name="M:CDDSS_API.Controllers.UserController.GetUserDetailed">
            <summary>
            Returns all Values of an User for edit profile
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Controllers.UserController.Post(CDDSS_API.UserShort)">
            <summary>
            edits a user profile
            </summary>
            <param name="email"></param>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <param name="secretQuestion"></param>
            <param name="answer"></param>
            <returns>returns HTTP Status Code OK if operation was successful, else HTTP Status Cude NOT Acceptable</returns>
        </member>
        <member name="T:CDDSS_API.Models.AccessRightModel">
            <summary>
            data model class representing an accessright
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.AlternativeModel">
            <summary>
            data model class representing an alternative
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.ArtefactModel">
            <summary>
            data model class representing an artefact
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.CriterionModel">
            <summary>
            data model class representing an Criterion
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.CriterionWeightModel">
            <summary>
            data model class representing CriterionWeight
            </summary>
        </member>
        <member name="M:CDDSS_API.Models.CriterionWeightModel.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Creates a new CriterionWeightModel
            </summary>
            <param name="userId">Access Object ID of User</param>
            <param name="criterion">Criterion ID</param>
            <param name="weight"></param>
        </member>
        <member name="M:CDDSS_API.Models.CriterionWeightModel.#ctor(System.String,System.Int32,System.Double)">
            <summary>
            Creates a new CriterionWeightModel
            </summary>
            <param name="user">Access Object ID of User</param>
            <param name="criterion">Criterion ID</param>
            <param name="weight"></param>
        </member>
        <member name="M:CDDSS_API.Models.CriterionWeightModel.#ctor(System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="criterion">criterion id</param>
            <param name="weight"></param>
        </member>
        <member name="P:CDDSS_API.Models.CriterionWeightModel.UserAccesObject">
            <summary>
            Access Object ID of User
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.DecisionModel">
            <summary>
            data model class representing a Decision
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.InfluenceFactorModel">
            <summary>
            data model class representing an InfluenceFactor
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.IssueModel">
            <summary>
            data model class representing an Issue
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.RatingModel">
            <summary>
            data model class representing a Rating
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.ReviewModel">
            <summary>
            data model class representing an Review
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.StakeholderModel">
            <summary>
            data model class representing a stakeholder
            </summary>
        </member>
        <member name="T:CDDSS_API.Models.TagModel">
            <summary>
            data model class representing a tag
            </summary>
        </member>
        <member name="T:CDDSS_API.Repository.AlternativeRepository">
            <summary>
            class for database operations regarding an Alternative
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.AlternativeRepository.GetAlternativesByIssueId(System.Int32)">
            <summary>
            returns all alternatives by IssueOD
            </summary>
            <param name="issueId"></param>
            <returns>List of Alternatives</returns>
        </member>
        <member name="M:CDDSS_API.Repository.AlternativeRepository.CreateAlternativeForIssue(CDDSS_API.Models.AlternativeModel)">
            <summary>
            creates an alternative for issue
            </summary>
            <param name="altModel"></param>
            <returns>returns true if operation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.AlternativeRepository.UpdateAlternative(CDDSS_API.Models.AlternativeModel)">
            <summary>
            updates an alternative
            </summary>
            <param name="altModel"></param>
            <returns>true if succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.AlternativeRepository.DeleteAlternative(System.Int32)">
            <summary>
            deletes an alternative
            </summary>
            <param name="altId">alternative id</param>
            <returns>true if succeded</returns>
        </member>
        <member name="T:CDDSS_API.Repository.ArtefactsRepository">
            <summary>
            class for database operations regarding an Artefact
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.ArtefactsRepository.GetAllArtefacts">
            <summary>
            returns all artefacts
            </summary>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Repository.CriterionRepository">
            <summary>
            class for database operations regarding criterion
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.CriterionRepository.GetCriterion(System.Int32)">
            <summary>
            returns a Criterion by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.CriterionRepository.getAllCriterias">
            <summary>
            Returns all Criterias
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.CriterionRepository.AddCriterion(CDDSS_API.Models.CriterionModel)">
            <summary>
            Adds new Criterion
            </summary>
            <param name="criterion"></param>
        </member>
        <member name="M:CDDSS_API.Repository.CriterionRepository.UpdateCriterion(CDDSS_API.Models.CriterionModel)">
            <summary>
            Updates a Criterion
            </summary>
            <param name="criterion"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.CriterionRepository.DeleteCriterion(System.Int32)">
            <summary>
            Deletes a Criterion
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.CriterionRepository.SetCriterionWeight(System.Int32,System.Double)">
            <summary>
            Sets Criterionweight
            </summary>
            <param name="id"></param>
            <param name="weight"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Repository.CriterionWeightRepository">
            <summary>
            class for database operations regarding CriterionWeight
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.CriterionWeightRepository.AddCriterionWeights(System.Collections.Generic.List{CDDSS_API.Models.CriterionWeightModel},System.String)">
            <summary>
            adds list of criterions weights to issue
            </summary>
            <param name="list">CriterionWeight List</param>
            <param name="email">E-Mail of current user</param>
            <returns>true if operation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.CriterionWeightRepository.DeleteCriterionWeights(System.Int32,System.String)">
            <summary>
            deletes CriterionWeights of current user to some issue
            </summary>
            <param name="issueId"></param>
            <param name="email">E-Mail of current user</param>
            <returns>true if operation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.CriterionWeightRepository.UpdateCriterionWeights(System.Collections.Generic.List{CDDSS_API.Models.CriterionWeightModel},System.String)">
            <summary>
            updates CriterionWeights of current user to some issue
            </summary>
            <param name="list">list of CriterionWeights</param>
            <param name="email">E-Mail of current user</param>
            <returns>true if operation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.CriterionWeightRepository.GetCriterionWeights(System.Int32)">
            <summary>
            returns all CriterionWeight of an Issue
            </summary>
            <param name="issueId"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Repository.DecisionRepository">
            <summary>
            class for database operations regarding a Decision
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.DecisionRepository.CreateDecision(CDDSS_API.Models.DecisionModel)">
            <summary>
            creates a Decision
            </summary>
            <param name="decision"></param>
            <returns>true if operation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.DecisionRepository.DeleteDecision(System.Int32)">
            <summary>
            deletes an Decision
            </summary>
            <param name="issueID"></param>
            <returns>true if succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.DecisionRepository.EditDecision(CDDSS_API.Models.DecisionModel)">
            <summary>
            edits an decision
            </summary>
            <param name="decision"></param>
            <returns>true if opearation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.DecisionRepository.GetDecision(System.Int32)">
            <summary>
            returns an Decision
            </summary>
            <param name="issueID"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Repository.DocumentRepository">
            <summary>
            Used for Operations with table document
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.DocumentRepository.GetFilesByIssueId(System.Int32)">
            <summary>
            returns a list of documents which are attached to the issue
            </summary>
            <param name="issueId">issue id</param>
            <returns>list of documents</returns>
        </member>
        <member name="M:CDDSS_API.Repository.DocumentRepository.CheckFileExists(System.Int32,System.String)">
            <summary>
            checks if file already exists
            </summary>
            <param name="issue">issue id</param>
            <param name="filename">filename</param>
            <returns>true if file already exists</returns>
        </member>
        <member name="M:CDDSS_API.Repository.DocumentRepository.UploadFile(System.Int32,System.String,System.IO.Stream)">
            <summary>
            loads a file into the database
            </summary>
            <param name="issue">issue id to wich file is attached</param>
            <param name="filename">name of the file</param>
            <param name="inputStream">stream of the file</param>
            <returns>returns false if upload was not successful, because a file with the same filename  exists</returns>
        </member>
        <member name="M:CDDSS_API.Repository.DocumentRepository.GetFile(System.Int32,System.String)">
            <summary>
            returns a file from the database
            </summary>
            <param name="issueId">issue of the file</param>
            <param name="filename">filename</param>
            <returns>stream of the file</returns>
        </member>
        <member name="T:CDDSS_API.Repository.IssueRepository">
            <summary>
            class for database operations regarding an Issue
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.GetAllIssues(System.String)">
            <summary>
            returns all Issues which are visable of current user
            </summary>
            <param name="email">E-Mail of current user</param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.GetIssueDetailed(System.Int32)">
            <summary>
            returns detaild Information of an Issue
            </summary>
            <param name="issueID"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.GetUserIssues(System.String)">
            <summary>
            returns Issues where current User is owner
            </summary>
            <param name="email">E-Mail of current User</param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.CreateIssue(CDDSS_API.Models.IssueModel,System.String)">
            <summary>
            creates a new issue and returns the issue id of the new issue
            </summary>
            <param name="issue"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.DeleteIssue(System.Int32,System.String)">
            <summary>
            deletes an Issue
            </summary>
            <param name="issueId"></param>
            <param name="ownerEmail">E-Mail of current user</param>
            <returns>true if operation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.NextStage(System.Int32,System.String)">
            <summary>
            Issue proceedes to next stage
            </summary>
            <param name="issueId"></param>
            <param name="ownerEmail">E-Mail of current user</param>
            <returns>true if operation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.EditIssue(CDDSS_API.Models.IssueModel,System.String)">
            <summary>
            edits an Issue
            </summary>
            <param name="im">IssueModel</param>
            <param name="email">E-Mail of Current User</param>
            <returns>true if operation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.ModifyStakeholders(System.Int32,System.Collections.Generic.List{CDDSS_API.Models.StakeholderModel})">
            <summary>
            edits issue stakeholders
            </summary>
            <param name="issueID"></param>
            <param name="stakeholders"></param>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.ModifyTags(System.Int32,System.Collections.Generic.List{CDDSS_API.Models.TagModel})">
            <summary>
            edits issue tags
            </summary>
            <param name="issueID"></param>
            <param name="tags"></param>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.ModifyArtefacts(System.Int32,System.Collections.Generic.List{CDDSS_API.Models.ArtefactModel})">
            <summary>
            edits issue artefacts
            </summary>
            <param name="issueID"></param>
            <param name="artefacts"></param>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.ModifyInfluenceFactors(System.Int32,System.Collections.Generic.List{CDDSS_API.Models.InfluenceFactorModel})">
            <summary>
            edits issue InfluenceFactors
            </summary>
            <param name="issueID"></param>
            <param name="influenceFactors"></param>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.ModifyAccessRights(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Char},System.String)">
            <summary>
            edits issue AccessRights
            </summary>
            <param name="issueID"></param>
            <param name="accessList"></param>
            <param name="email"></param>
        </member>
        <member name="M:CDDSS_API.Repository.IssueRepository.GetAllUserIssues(System.String)">
            <summary>
            returns all visible issues for current user
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Repository.RatingRepository">
            <summary>
            class for database operations regarding an rating
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.RatingRepository.getRating(System.Int32,System.Int32)">
            <summary>
            Returns a specific Rating
            </summary>
            <param name="criterionId"></param>
            <param name="alternativeId"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.RatingRepository.getAllRatings">
            <summary>
            Returns all Ratings
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.RatingRepository.getAllRatings(System.Int32,System.String)">
            <summary>
            Returns all Ratings for an Issue of current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.RatingRepository.AddRating(CDDSS_API.Models.RatingModel)">
            <summary>
            Inserts a Rating
            </summary>
            <param name="ratingModel"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.RatingRepository.UpdateRating(CDDSS_API.Models.RatingModel)">
            <summary>
            Updates Rating
            </summary>
            <param name="rating"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.RatingRepository.DeleteRating(System.Int32,System.Int32)">
            <summary>
            Deletes a Rating
            </summary>
            <param name="criterionid"></param>
            <param name="alternativeid"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.RatingRepository.GetUserIssueRatings(System.Int32,System.String)">
            <summary>
            returns issue ratings for user and criterion
            </summary>
            <param name="criterionID"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Repository.ReviewRepository">
            <summary>
            class for database operations regarding an Review
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.ReviewRepository.AddReview(CDDSS_API.Models.ReviewModel,System.String)">
            <summary>
            Adds a review for an Issue
            </summary>
            <param name="rm">ReviewModel</param>
            <param name="email">E-Mail of current user</param>
            <returns>true if operation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.ReviewRepository.GetReviewsOfIssue(System.Int32)">
            <summary>
            returns all reviews of an Issue
            </summary>
            <param name="issueId"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.ReviewRepository.EditReview(CDDSS_API.Models.ReviewModel,System.String)">
            <summary>
            edits an review for an Issue
            </summary>
            <param name="rm">ReviewModel</param>
            <param name="email">E-Mail of current user</param>
            <returns>true if operation succeded</returns>
        </member>
        <member name="M:CDDSS_API.Repository.ReviewRepository.DeleteReview(System.Int32,System.String)">
            <summary>
            deletes a review
            </summary>
            <param name="issueId"></param>
            <param name="email">E-Mail of current user</param>
            <returns>true if operation succededs</returns>
        </member>
        <member name="T:CDDSS_API.Repository.StakeholdersRepository">
            <summary>
            class for database operations regarding a stakeholder
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.StakeholdersRepository.GetAllStakeholders">
            <summary>
            returns all stakeholders
            </summary>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Repository.TagsRepository">
            <summary>
            class for database operations regarding a Tag
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.TagsRepository.GetAllTags">
            <summary>
            returns all Tags
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.TagsRepository.getTagsOfIssue(System.Int32)">
            <summary>
            returns all Tags of an Issue
            </summary>
            <param name="issueID"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.TagsRepository.EditTag(CDDSS_API.Models.TagModel)">
            <summary>
            Edits a specific Tag
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.TagsRepository.DeleteTag(System.Int32)">
            <summary>
            Deletes a specific Tag
            </summary>
            <param name="tagID"></param>
            <returns></returns>
        </member>
        <member name="T:CDDSS_API.Repository.UserRepository">
            <summary>
            makes db operations on table user
            </summary>
        </member>
        <member name="M:CDDSS_API.Repository.UserRepository.GetUsers">
            <summary>
            returns a list with all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.UserRepository.GetUserByEmail(System.String)">
            <summary>
            return a UserShort by email
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.UserRepository.GetUserDetailByEmail(System.String)">
            <summary>
            Returns user detailed
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CDDSS_API.Repository.UserRepository.EditUser(CDDSS_API.UserShort,System.String)">
            <summary>
            edits a user
            </summary>
            <param name="email">is necessary</param>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <param name="secretQuestion"></param>
            <param name="answer"></param>
            <returns>true if update is successful</returns>
        </member>
        <member name="M:CDDSS_API.Repository.UserRepository.CreateAccessObjectForUser(System.String)">
            <summary>
            creates an accessobject for the user
            </summary>
            <param name="email"></param>
        </member>
        <member name="T:CDDSS_API.UserShort">
            <summary>
            data model class representing an User
            </summary>
        </member>
    </members>
</doc>
